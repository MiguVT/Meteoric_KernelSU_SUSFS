name: Build Nothing Phone Kernels

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:

jobs:
  build-nothing-phone:
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      os_patch_level: '2024-12'
      revision: 'r1'

  release:
    runs-on: ubuntu-latest
    needs:
      - build-nothing-phone

    env:
      GH_TOKEN: ${{ github.token }}
      RELEASE_NAME: 'Nothing Phone Kernels With WKSU & SUSFS v1.5.10'
      RELEASE_BODY:
    steps:
      - name: Maximize Build Space
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-swapfile: 'true' # Frees ~4 GB
          verbose: 'true' # Enable detailed logging

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit hashes and generate commit URLs
        run: |
          GITLAB_OWNER="simonpunk"
          GITLAB_REPO="susfs4ksu"

          # Get SUSFS commit hash for android12-5.10
          BRANCH_NAME="gki-android12-5.10"
          COMMIT_HASH=$(git ls-remote https://gitlab.com/$GITLAB_OWNER/$GITLAB_REPO.git refs/heads/$BRANCH_NAME | awk '{ print $1 }')

          if [[ -n "$COMMIT_HASH" ]]; then
            COMMIT_URL="https://gitlab.com/$GITLAB_OWNER/$GITLAB_REPO/-/commit/$COMMIT_HASH"
            echo "$BRANCH_NAME Commit: $COMMIT_HASH"
            echo "$BRANCH_NAME Commit URL: $COMMIT_URL"

            echo "COMMIT_HASH_SUSFS=$COMMIT_HASH" >> "$GITHUB_ENV"
            echo "COMMIT_URL_SUSFS=$COMMIT_URL" >> "$GITHUB_ENV"
          fi

      - name: Get KernelSU variant refs and links
        run: |
          # Get WKSU latest commit from wild branch
          WKSU_REF=$(git ls-remote "https://github.com/WildKernels/Wild_KSU.git" refs/heads/wild | awk '{print $1}')
          WKSU_URL="https://github.com/WildKernels/Wild_KSU/commit/$WKSU_REF"
          echo "WKSU_REF=$WKSU_REF" >> $GITHUB_ENV
          echo "WKSU_URL=$WKSU_URL" >> $GITHUB_ENV

          # Get Nothing Phone kernel commit
          NOTHING_REF=$(git ls-remote "https://github.com/MiguVT/kernel_nothing_sm8475_github_actions.git" refs/heads/clean | awk '{print $1}')
          NOTHING_URL="https://github.com/MiguVT/kernel_nothing_sm8475_github_actions/commit/$NOTHING_REF"
          echo "NOTHING_REF=$NOTHING_REF" >> $GITHUB_ENV
          echo "NOTHING_URL=$NOTHING_URL" >> $GITHUB_ENV

      - name: Generate and Create New Tag
        run: |
          LATEST_TAG=$(gh api repos/${{ github.repository }}/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v1.5.10-r0"
          fi

          NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')

          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV

          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          path: ./downloaded-artifacts
          pattern: '*-make'

      - name: Set release body
        run: |
          cat << 'EOF' > release_body.md

          **IMPORTANT DISCLAIMER**
          This software is provided for testing and educational purposes only. Use at your own risk.
          The developers are not responsible for any damage, data loss, or issues that may occur.
          Please ensure you have proper backups before installation.

          **Device Compatibility**
          -> **Nothing Phone specific kernels** - Android 12 5.10 based
          -> Built from Nothing Phone kernel source repository

          Features:
          -> Wild KSU
          -> Multi Manager Support for WKSU Manager & KernelSU-Next Manager (Only Install One)
          -> SUSFS ‡∂û v1.5.10
          -> Scope-Minimized Manual hooks v1.4
          -> Magic Mount Support
          -> Simple Maphide for LineageOS Detections
          -> Futile Maphide for jit-zygote-cache Detections
          -> IPSet Support for Advanced Network Filtering
          -> Wireguard Support
          -> BBR v1 Support

          Build Types:
          -> **Make Build**: Built using traditional make
          -> **Normal Build**: Built using Bazel or build.sh
          -> **For avbroot users**: Try the normal build from CI to get proper KMI (Kernel Module Interface) compatibility

          Notes:
          -> SUS SU Mode 2 will show as disabled or not compatible due to non-kprobe hooks and is not needed anymore!
          -> Official Kernel Flasher is broken with latest susfs, try https://github.com/fatalcoder524/KernelFlasher/
          -> **Device specific**: These kernels are built specifically for Nothing Phone devices

          Module:
          -> https://github.com/sidex15/ksu_module_susfs

          Managers:
          -> WKSU: https://t.me/Wild_Kernels/26618
          -> Next: https://github.com/KernelSU-Next/KernelSU-Next

          Commit Hashes (at the time of release):
          -> WKSU: [${{ env.WKSU_REF }}](${{ env.WKSU_URL }})
          -> Nothing Phone Kernel: [${{ env.NOTHING_REF }}](${{ env.NOTHING_URL }})
          -> SUSFS4KSU (gki-android12-5.10): [${{ env.COMMIT_HASH_SUSFS }}](${{ env.COMMIT_URL_SUSFS }})
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_TAG }}
          prerelease: false
          files: ''
          name: ${{ env.RELEASE_NAME }}
          body_path: release_body.md

      - name: Upload Release Assets
        run: |
          for file in ./downloaded-artifacts/*/*; do
            if [ -d "$file" ]; then
              continue
            fi
            echo "Uploading $file..."
            gh release upload ${{ env.NEW_TAG }} "$file"
          done

      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts/**/*

      - name: Send Telegram Notification
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -F chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -F message_thread_id="${{ secrets.TELEGRAM_TOPIC_ID_GKI }}" \
            -F text="
            üåΩ *New Kernel Release Uploaded*
            üì¶ *Repository:* [${{ github.repository }}](https://github.com/${{ github.repository }})
            ‚úèÔ∏è *Commit:* [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            [üîó View GitHub Release](https://github.com/${{ github.repository }}/releases/tag/${{ env.NEW_TAG }})" \
            -F parse_mode="Markdown"
