name: Build Nothing Phone Kernels

permissions:
  contents: write
  actions: write

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - '.github/workflows/**'
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - '.github/workflows/**'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Choose Release Type'
        required: true
        type: choice
        options:
          - Actions
          - Pre-Release
          - Release
          - Release (No Artifacts)
        default: Actions

jobs:
  build-nothing-phone:
    if: inputs.release_type != 'Release (No Artifacts)'
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      os_patch_level: 'lts'
      revision: 'r1'
      sub_level: 'X'

  release:
    runs-on: ubuntu-latest
    if: inputs.release_type == 'Release (No Artifacts)' || inputs.release_type != 'Actions'
    needs:
      - build-nothing-phone

    env:
      GH_TOKEN: ${{ github.token }}
      RELEASE_NAME: 'Nothing Phone Kernels With WKSU & SUSFS v1.5.12'
      RELEASE_BODY: ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate New Tag
        run: |
          LATEST_TAG=$(gh api repos/${{ github.repository }}/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v1.5.12-r0"
          fi

          NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')

          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV

          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Download Artifacts
        if: inputs.release_type != 'Release (No Artifacts)'
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Set release body
        run: |
          cat << 'EOF' > release_body.md

          **IMPORTANT DISCLAIMER**
          This software is provided for testing and educational purposes only. Use at your own risk.
          The developers are not responsible for any damage, data loss, or issues that may occur.
          Please ensure you have proper backups before installation.

          **Device Compatibility**
          -> **Nothing Phone 2** - Android 12 5.10 based kernels
          -> Built from Nothing Phone kernel source repository
          -> **Flash using OrangeFox with the AnyKernel3 ZIP file**

          Features:
          -> Wild KSU
          -> Multi Manager Support for WKSU Manager & KernelSU-Next Manager, some other forks works too (Only Install One - I recommend WKSU Manager)
          -> SUSFS à¶ž
          -> Scope-Minimized Manual hooks v1.4
          -> Magic Mount Support
          -> Ptrace Patch Support
          -> IPSet Support for Advanced Network Filtering
          -> Wireguard Support
          -> BBR v1 Support
          -> Added BBG support to prevent unauthorised writes to certain partitions: https://github.com/vc-teahouse/Baseband-guard

          ðŸ”¹ BBG (Baseband-guard)
          - A lightweight LSM (Linux Security Module) for Android kernel
          - Blocks unauthorized writes to critical partitions/device nodes
          - Prevents malicious tampering with baseband and boot chain
          - Kernel-level protection via LSM hooks
          - Reduces risk of soft-brick/hard-brick issues

          **Installation Instructions:**
          -> Use **OrangeFox Recovery** to flash the **AnyKernel3.zip** file
          -> Boot images (.img files) are provided for advanced users only
          -> **Recommended**: Flash the AnyKernel3.zip for best compatibility

          Notes:
          -> SUS SU Mode 2 will show as disabled or not compatible due to non-kprobe hooks and is not needed anymore!
          -> Official Kernel Flasher is broken with latest susfs, try https://github.com/fatalcoder524/KernelFlasher/ or better use OrangeFox Recovery and flash the AnyKernel3 ZIP
          -> **Note:** For detailed commit information and component versions, please check the [build summary](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}) in the GitHub Actions workflow that generated this release.


          Module:
          -> https://github.com/sidex15/ksu_module_susfs

          Managers:
          -> WKSU: https://github.com/WildKernels/Wild_KSU
          -> Next: https://github.com/KernelSU-Next/KernelSU-Next
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_TAG }}
          prerelease: ${{ inputs.release_type == 'Pre-Release' }}
          files: ''
          name: ${{ env.RELEASE_NAME }}
          body_path: release_body.md

      - name: Upload Release Assets
        if: inputs.release_type != 'Release (No Artifacts)'
        run: |
          for dir in ./downloaded-artifacts/*/; do
            # Check if this is an AnyKernel3 artifact directory
            if [[ "$(basename "$dir")" == *"-AnyKernel3" ]]; then
              artifact_name=$(basename "$dir")
              echo "Creating ZIP for $artifact_name..."
              # The entire directory IS the AnyKernel3 content, so zip it directly
              zip -r -9 "${artifact_name}.zip" "$dir"
              echo "Uploading ${artifact_name}.zip..."
              gh release upload ${{ env.NEW_TAG }} "${artifact_name}.zip"
            fi
          done

      - name: Display Files Uploaded
        if: inputs.release_type != 'Release (No Artifacts)'
        run: |
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts/**/*
